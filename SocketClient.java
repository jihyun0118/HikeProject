import java.io.PrintWriter;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.net.Socket;import java.net.UnknownHostException;/* * class SocketClient is the socket client for * Hike GUI. socket client creates sockets, sends messages, * and also closes socket connections. *  * referenced for help: https://github.com/manuelsantiengineering/ * EN605_681/blob/master/module06/src/com/msanti16/net/services/ * ClientSocket.java *  * @author: Jihyun Lim *  *  * */public class SocketClient extends Socket {	public PrintWriter out = null;    public BufferedReader in = null;    private Socket socket = null;     private String serverHost;    private int serverPort;      // remembering host and port name    public SocketClient(String serverHost, int serverPort)     {    	// extends Socket class        super();        this.serverHost = serverHost;        this.serverPort = serverPort;    }    // constructing the socket    public void createSocket() throws IOException     {        try         {            System.out.println("Creating Socket at: " + this.serverHost + " PORT: " + this.serverPort);            // every time doing a new calculate, create a new socket (because socket closes every time)            this.socket = new Socket(this.serverHost, this.serverPort);        }         catch (UnknownHostException e)         {            System.err.println("Don't know about host: " + this.serverHost);            System.exit(1);        }    }        // close socket connection    public void closeConnections() throws IOException     {        try        {            System.out.println("Closing Socket at: " + this.serverHost + " PORT: " + this.serverPort);            this.socket.close();            this.out.close();            this.in.close();        }        catch (IOException e)         {            System.err.println("Couldn't get I/O for " + "the connection to: " + this.serverHost + " at PORT " + this.serverPort);            System.exit(1);        }    }         public String sendMessage(String message) throws IOException     {        // write onto socket using PrintWriter    	this.out = new PrintWriter(socket.getOutputStream(), true);    	// read off the socket using BufferedReader        this.in = new BufferedReader(new InputStreamReader(socket.getInputStream()));        String responseStr = "";        System.out.println("Message: " + message);        try         {        	// putting message on the socket            this.out.println(message);            // reading a response off the socket            responseStr = this.in.readLine();            System.out.println("Response: " + responseStr);            if (responseStr == null)             {                System.err.println("Disconnected!");            }            return responseStr;        }        catch (IOException e)         {            System.err.println("Couldn't get I/O for " + "the connection to: " + this.serverHost + " at PORT " + this.serverPort);            System.exit(1);        }        return responseStr;    }}// end class SocketClient